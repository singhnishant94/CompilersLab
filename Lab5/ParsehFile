SymTab *globalTab;
SymTab *currentTab;
BasicVarType currentType;
string curName;
ArrayType* head;
ArrayType* current;
Param* headParam;
Param* curParam;
FuncRecord* func;
GlType* curGlType;
int GlOffset;
int curOffset;
int width;
int libFunc;
stack<Register*> regStack;
int countReg;
FuncRecord* curFuncRecord;
int isMain;
stack<Param*> paramStack;
stack<int> libFuncStack;

Parser(){
	isMain = 0;
	globalTab = new SymTab();
	currentTab = globalTab;
	head = 0;
	curFuncRecord = 0;
	current = 0;
	headParam = 0;
	curParam = 0;
	func = 0;
	GlOffset = 0;
	curOffset = 0;
	width = 0;
	libFunc = 0;
	string regName[] = {"eax", "ebx", "ecx", "edx"};
	countReg = 4;
	for (int i = countReg - 1; i >= 0; i--){
	    regStack.push(new Register(regName[i]));
	}
}

~Parser()
{
	for (int i = 0; i < countReg; i++){
	    Register* top = regStack.top();
	    regStack.pop();
	    delete top;
	}
}
